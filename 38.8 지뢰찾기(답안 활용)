#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    int row, col;
    scanf("%d %d", &row, &col);

    char **m = malloc(sizeof(char *)*row); // 행 메모리 할당. 
    for (int i = 0; i<(row); i++)
    {
        m[i] = malloc(sizeof(char)*col+1); // 열 메모리 할당. 문자열을 사용할 것을 유념하기
        memset(m[i], 0, sizeof(char)*col+1); // 행렬을 0으로 초기화
    }


  
    for (int i = 0; i<row; i++)
    {       
            scanf("%s", m[i]); //
       
    }

    int count =0; // 인근 *의 개수를 저장하고 출력할 변수 초기화

  
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            if (m[i][j] == '*') // *인 경우 *을 출력
                printf("%c", m[i][j]);
            else // *이 아닐 경우 해당 원소를 기준으로 8번을 돌아 별표의 개수를 저장한다.
            {
                for (int y = i - 1; y <= i + 1; y++) // 한 칸 위부터 한 칸 아래까지 반복
                {
                    for (int x = j - 1; x <= j + 1; x++) // 한 칸 앞(왼쪽)부터 한 칸 뒤(오른쪽)까지 반복
                    {

                        if ((y < 0 || x < 0 || y >= row || x >= col)) //주변을 탐색할 때 배열의 범위를 벗어나면(y < 0 || x < 0 || y >= m || x >= n) 요소에 접근하지 않고 건너뛰어야 합니다.
                            continue;

                        else if (m[y][x] == '*') // 요소를 주변으로 3행 3열의 작은 행렬의 각 원소에 *가 있으면 *의 개수를 저장
                            count += 1;
                    }

                }

                m[i][j] = count; // *의 개수를 저장
                printf("%d", m[i][j]); // *의 개수 출력
                count = 0; // 다음 행렬의 요소를 위해 초기화
            }
        }
        printf("\n"); // 한 행을 마치면 줄 바꿈

    }
   

    for (int i = 0; i < row; i++) // 행에서 열을 가리키는 포인터 메모리 해제
    {
        free(m[i]);
    }

    free(m);

    return 0;
}
